// Generated by CoffeeScript 1.10.0
(function() {
  var Condition_Handler,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Condition_Handler = (function() {
    function Condition_Handler(foo, dt) {
      this.foo = foo;
      this.dt = dt;
      this.event_listener = bind(this.event_listener, this);
      this.timeout_handler = bind(this.timeout_handler, this);
      this.looper = bind(this.looper, this);
      this.condition = false;
      this.event_received = false;
      this.event_count = 0;
      this.looper_starts = 0;
      this.loop_count = 0;
      this.timeout = null;
    }

    Condition_Handler.prototype.looper = function() {
      if (this.condition) {
        this.foo();
        return requestAnimationFrame(this.looper);
      }
    };

    Condition_Handler.prototype.timeout_handler = function() {
      if (!this.event_received) {
        console.log('event_count: ' + this.event_count);
        return this.condition = false;
      }
    };

    Condition_Handler.prototype.event_listener = function() {
      this.event_count++;
      this.event_received = true;
      clearTimeout(this.timeout);
      this.timeout = setTimeout(this.timeout_handler, this.dt);
      this.event_received = false;
      if (!this.condition) {
        this.condition = true;
        console.log('looper_starts: ' + ++this.looper_starts);
        return requestAnimationFrame(this.looper);
      }
    };

    return Condition_Handler;

  })();

  window.Condition_Handler = Condition_Handler;

}).call(this);
