
Project Overview

  You will optimize a provided website with a number of optimization-
  and performance-related issues so that it achieves a target
  PageSpeed score and runs at 60 frames per second.

Note

  If you have successfully completed the project for the Website
  Performance Optimization course in the past (which entails having
  graduated from the course and having access to your course
  certificate), simply email us at frontend-project@udacity.com with
  your passing evaluation and we'll give you credit for this project.

Why this project?

  As web applications become increasingly interactive and accessed on
  a variety of devices there are a variety of opportunities in which
  performance issues can hinder the user experience. This project
  presents a number of those performance issues and provides an
  opportunity to showcase your skills in identifying and optimizing
  web applications.

What will I learn?

  You will learn about the critical rendering path, the process by
  which the browser receives HTML, CSS and JavaScript and the required
  processing to turn them into rendered pixels. Youâ€™ll also start to
  think of your work as a continuously running web application that
  requires a consistent framerate to produce the most enjoyable user
  experience.

How will this help my Career?

  As the number of devices users can access an application from
  continues to grow, ensuring a quality user experience across those
  devices is important.  Understanding lower-level concepts regarding
  how the browser works and interprets your code enables you to
  produce highly performant applications.


----------------------------------------------------------------------------


How will I complete this project?
----------------------------------

  1. Review our course on Website Performance Optimization using Google
     PageSpeed.
     https://www.udacity.com/course/viewer#!/c-ud884-nd

  2. Download the required project assets.
     https://github.com/udacity/frontend-nanodegree-mobile-portfolio

  3. Use Chrome Developer Tools to review the current state of various
     pages within the application and identify areas for improvement.

  4. Review the code powering the website and identify areas where you
     believe modifications are warranted.  

  5. Iteratively make changes and test those changes using the tools
     available to you to determine if they are a performance gain or
     loss.

----------------------------------------------------------------------------

Evaluation
------------

Your project will be evaluated by a Udacity reviewer according to the
rubric below. Be sure to review it thoroughly before you submit. All
criteria must "meet specifications" in order to pass.


  Critical Rendering Path for index.html
  --------------------------------------
  - student identifies and performs optimizations to achieve a
    PageSpeed score of 90 for Mobile and Desktop on index.html
  - [Exceeds] student identifies and performs optimizations to 
    achieve a PageSpeed score _above_ 90 for Mobile and Desktop on
    index.html

  Framerate for pizza.html
  --------------------------
  - student identifies and performs optimazations ensuring a
    consistent frame rate at 60fps when scrolling in pizza.html.

  Computation Efficiency for pizza.html
  --------------------------------------
  - time to resize pizzas is less than 5 ms in pizza.html shown in the
    browser console.

  Build Tools
  -----------
  - [Exceeds] student researches, identifies and uses build tools to
    automatically perform optimizations such as minification of CSS
    and JS and image optimizations.

  Comments
  --------
  - Comments in views/js/main.js for pizza.html are present and
    effectively explain longer code prodedures.

  Documentation
  -------------
  - A README file is included detailing all steps required to
    successfully run the application and outlines the opotimizations
    that the student made in views/js/main.js for ... ???

----------------------------------------------------------------------------

Submission
------------

  1. Submit both your source and production code in the same
     repository in separate directories. These directories are usually
     named src and dist respectively.

  2. If build tools are used the gulp or grunt.js file as well as the
     package.json file must be included in the submission.

  3. If build tools are used, the instructions for building the
     project and running the tool must be included in the
     README.md. You may find the short Writing READMEs course helpful.
     https://www.udacity.com/course/writing-readmes--ud777

  4. The node_modules directory may contain thousands of files and
     should not be contained in the submission. See the forum post how
     to remove node_modules directory from Github repository for
     instructions.
     https://discussions.udacity.com/t/how-to-remove-node-modules-directory-from-github-respository/40929

  5. The master branch is the default Github repository branch. If you
     wish to submit another branch, you'll need to set it as the new
     default branch inside your Github repository.
     https://help.github.com/articles/setting-the-default-branch/

  6. When you're ready to submit your project go back to your Udacity
     Home, click on Project 4, and we'll walk you through the rest of
     the submission process. Due to the high volume of submissions we
     receive, please allow up up to 7 business days for your
     evaluation to be returned.

  7. If you are having any problems submitting your project or wish to
     check on the status of your submission, please email us at
     frontend-project@udacity.com or visit us in the discussion
     forums.
